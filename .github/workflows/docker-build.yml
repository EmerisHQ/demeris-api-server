name: Build docker images

on:
  workflow_call: # must be enabled when called from an other workflow
  workflow_dispatch:
  push:
    tags:
      - 'v*'
  release:
    types:
      - released

jobs:
  api-server:
    runs-on: self-hosted
    outputs:
      version: ${{ steps.get_version.outputs.version-without-v }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: Dockerfile
          tags: gcr.io/tendermint-dev/emeris-api-server:${{ steps.get_version.outputs.version-without-v }},gcr.io/tendermint-dev/emeris-api-server:${{ github.sha }}
          build-args: |
            GIT_TOKEN=${{ secrets.TENDERBOT_GIT_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-on-dev:
    runs-on: self-hosted
    needs: api-server

    steps:
      - name: Call repository_dispatch on demeris-backend
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.TENDERBOT_GIT_TOKEN }}
          repository: emerishq/demeris-backend
          event-type: dev-push-api-server
          client-payload: |
            {
              "repo_name":"demeris-api-server",
              "branch_name":"main",
              "image_name":"emeris-api-server",
              "image_sha":"${{ github.sha }}",
              "version":"${{ needs.api-server.outputs.version }}",
              "service_name":"api-server",
              "deploy_type":"deploy_dev"
            }
