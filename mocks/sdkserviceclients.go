// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	sdkutilities "github.com/emerishq/sdk-service-meta/gen/sdk_utilities"

	testing "testing"
)

// SDKServiceClients is an autogenerated mock type for the SDKServiceClients type
type SDKServiceClients struct {
	mock.Mock
}

type SDKServiceClients_Expecter struct {
	mock *mock.Mock
}

func (_m *SDKServiceClients) EXPECT() *SDKServiceClients_Expecter {
	return &SDKServiceClients_Expecter{mock: &_m.Mock}
}

// GetSDKServiceClient provides a mock function with given fields: version
func (_m *SDKServiceClients) GetSDKServiceClient(version string) (sdkutilities.Service, error) {
	ret := _m.Called(version)

	var r0 sdkutilities.Service
	if rf, ok := ret.Get(0).(func(string) sdkutilities.Service); ok {
		r0 = rf(version)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(sdkutilities.Service)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(version)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SDKServiceClients_GetSDKServiceClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSDKServiceClient'
type SDKServiceClients_GetSDKServiceClient_Call struct {
	*mock.Call
}

// GetSDKServiceClient is a helper method to define mock.On call
//  - version string
func (_e *SDKServiceClients_Expecter) GetSDKServiceClient(version interface{}) *SDKServiceClients_GetSDKServiceClient_Call {
	return &SDKServiceClients_GetSDKServiceClient_Call{Call: _e.mock.On("GetSDKServiceClient", version)}
}

func (_c *SDKServiceClients_GetSDKServiceClient_Call) Run(run func(version string)) *SDKServiceClients_GetSDKServiceClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *SDKServiceClients_GetSDKServiceClient_Call) Return(_a0 sdkutilities.Service, _a1 error) *SDKServiceClients_GetSDKServiceClient_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

// NewSDKServiceClients creates a new instance of SDKServiceClients. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewSDKServiceClients(t testing.TB) *SDKServiceClients {
	mock := &SDKServiceClients{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
